Imports System.IO
Public MustInherit Class ConfigurationFile

    Private Structure Info
        Public Const fileName As String = ".cfg"
        Public Const titleName As String = " configuration file"
    End Structure

    Protected Overridable ReadOnly Property FileName As String
        Get
            Return Info.fileName
        End Get
    End Property

    Protected Overridable ReadOnly Property TitleName As String
        Get
            Return Info.titleName
        End Get
    End Property


    Protected Overridable Function ExistFile(ByVal fileName As String, ByVal titleName As String, ByVal fileData As String) As Boolean

        If File.Exists(fileName) Then
            Return True
        Else
            Dim msgText As String
            Dim msgReasult As DialogResult
            Dim msgTitle As MessageTitle = New MessageTitle()

            msgText = titleName & " does not exist." & Environment.NewLine
            msgText += "Do you want to create a new configuration file" & Environment.NewLine
            msgText += "with a recommended default settings?"

            msgReasult = MessageBox.Show(msgText, msgTitle.TitleWarning, MessageBoxButtons.YesNo, MessageBoxIcon.Warning)
            If msgReasult = DialogResult.Yes Then
                If CreateFile(fileName, titleName, fileData) Then
                    Return True
                Else
                    Return False
                End If
            Else
                Return False
            End If
        End If

    End Function

    Protected Overridable Function DeleteFile(ByVal fileName As String, ByVal titleName As String) As Boolean

        If File.Exists(fileName) Then
            Try
                File.Delete(fileName)
                Return True
            Catch ex As Exception
                Dim msgText As String
                Dim msgTitle As MessageTitle = New MessageTitle()
                Dim msgSubText As MessageText = New MessageText()

                msgText = titleName & " can not be deleted." & Environment.NewLine & msgSubText.ID00
                MessageBox.Show(msgText, msgTitle.TitleError, MessageBoxButtons.OK, MessageBoxIcon.Error)
                Return False
            End Try
        Else
            Return True
        End If

    End Function

    Protected Overridable Function CreateFile(ByVal fileName As String, ByVal titleName As String, ByVal fileData As String) As Boolean
        Dim msgText As String
        Dim msgTitle As MessageTitle = New MessageTitle()
        Dim msgSubText As MessageText = New MessageText()

        If File.Exists(fileName) Then
            Try
                File.Delete(fileName)
            Catch ex As Exception
                msgText = titleName & " can not be modified." & Environment.NewLine & msgSubText.ID00
                MessageBox.Show(msgText, msgTitle.TitleError, MessageBoxButtons.OK, MessageBoxIcon.Error)
                Return False
            End Try
        End If

        If WriteFile(fileName, titleName, fileData) Then
            msgText = titleName & " was successfully created" & Environment.NewLine
            msgText += "with an inital recommended settings."
            MessageBox.Show(msgText, msgTitle.TitleInfo, MessageBoxButtons.OK, MessageBoxIcon.Information)
            Return True
        Else
            msgText = " can not be created." & Environment.NewLine & msgSubText.ID00
            MessageBox.Show(msgText, msgTitle.TitleError, MessageBoxButtons.OK, MessageBoxIcon.Error)
            Return False
        End If

    End Function

    Protected Overridable Function WriteFile(ByVal fileName As String, ByVal titleName As String, ByVal fileData As String) As Boolean
        Dim app As Application = New Application()
        Dim comment As String = "# Generated by " & app.Title

        Try
            app = Nothing
            Using sw As StreamWriter = File.CreateText(fileName)
                sw.WriteLine("# " & titleName)
                sw.WriteLine(comment)
                For i As Integer = 1 To comment.Length
                    sw.Write("#")
                Next
                sw.WriteLine("")
                sw.WriteLine("")
                sw.WriteLine(fileData)
                sw.Close()
            End Using
            Return True
        Catch ex As Exception
            Return False
        End Try

    End Function

    Protected Overridable Function ReadFile(ByVal fileName As String, ByVal keyValue As String) As String
        Dim line As String

        Try
            Using sr As StreamReader = New StreamReader(fileName)
                Do
                    line = sr.ReadLine
                    If line.Contains(keyValue) Then
                        'If line.StartsWith(keyValue.Substring(0, 1)) Then
                        If line.StartsWith(keyValue) Then
                            line = line.Replace(keyValue, "").Replace("=", "").Replace(" ", "")
                            Return line
                        End If
                    End If
                Loop Until sr.EndOfStream
            End Using
            Return Nothing
        Catch ex As Exception
            Return Nothing
        End Try

    End Function


    Protected Function ConvertEnable(ByVal inputValue As Boolean) As String

        If inputValue Then
            Return "1"
        Else
            Return "0"
        End If

    End Function

    Protected Function ConvertValue(ByVal inputValue As String) As Boolean

        If inputValue = "0" Then
            Return False
        Else
            Return True
        End If

    End Function

End Class
